// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model TopicTable{ 
  id Int @id @default(autoincrement())
  idx String @unique
  name String @db.VarChar(50)
  topic_type String
  topic_depiction String @db.VarChar(500)
  parent_topic Int?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_by String?
  deleted_at DateTime?

  @@map("topic_table")
 }

model PostTable {
  id        Int      @id @unique @default(autoincrement())
  post_type Int
  title String @db.VarChar(50)
  hidden Boolean  @default(false)
  is_edit Boolean @default(false)
  //is_ref Boolean @default(false)
  //ref_post Int?  //넣을시간 없을듯
  PostTable     String   @db.VarChar(200) @map("post_table")
  contents   PostContent[]
  //hit Int @default(0)
  author_name String @db.VarChar(50)
  author_id  Int?
  published DateTime @default(now())
  updated_at DateTime @updatedAt
  //tag String @db.Text @index()
  
  @@index([title])
  @@map("post_table")
}

model PostContent {
  id        Int      @id @default(autoincrement())
  post PostTable @relation(fields: [post_id], references: [id])
  rep_id Int? @db.UnsignedTinyInt
  post_id  Int
  ip String? @db.VarChar(39)
  is_image Boolean
  is_edit Boolean
  content String @db.MediumText()
  hidden Boolean @default(false)
  published DateTime @default(now())
  edited DateTime @updatedAt
  deleted_by String 
  deleted_at DateTime?
  like Int @default(0)
  //score Float @default(0.00) //시간에따른 감소
  //spam_level Int? //스팸단어 필터링에 따른 감소 같은건 만들시간없는 불필요한 필드들

  @@index([post_id])
  @@fulltext([content])
  @@map("post_content")
}
model User {
  user_id     Int      @id @default(autoincrement()) @unique
  user_name   String  @db.VarChar(50)
  auth_type  Int 	@db.UnsignedTinyInt
  role_type String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?

  @@index([user_id])
  @@map("user")
}

model PostImage{
  idx Bytes @id @default(dbgenerated("(uuid_to_bin(uuid()))")) @db.Binary(16)
  origin_name String
  image_size Int
  name String 
  extension String
  path_type String
  path String 
  width Int?
  height Int?
  post_content_id Int //따로 외래키 설정 안하겠음
  topic_id Int
  
  @@map("post_image")
}

model UserProfile{
  user_id Int @unique
  custom_name String @unique @db.VarChar(12)
  custom_memo String? @db.VarChar(500)
  updated_at DateTime @updatedAt

  @@id([user_id])
  @@index([user_id])
  @@map("user_profile")
}

model AuthPassword{
  user_id Int @unique
  password String @db.Char(64)
  nacl String @db.VarChar(100)
  pv String? 
  
  @@id([user_id])
  @@map("auth_password")
}